.. _ru_setup_py:

Классы для создания бинарных сборок с помощью cx_Freeze
-------------------------------------------------------

Файл `src/setup.py`_ содержит классы для создания бинарных сборок под Windows и Linux с помощью cx_Freeze_.


Базовый класс :class:`BaseBuilder` выполняет общие действия, которые необходимые выполнить с помощью cx_Freeze_ независимо от целевой операционной системы. Производные от :class:`BaseBuilder` классы уточняют параметры, специфические для Windows (класс :class:`WindowsBuilder`) и Linux (класс :class:`LinuxBuilder`).

.. py:class:: BaseBuilder

    .. py:method:: build

        Единственный публичный метод класса :class:`BaseBuilder` - это метод `build`, который собирает информацию о параметрах сборки и передает их в функцию `setup` из модуля `cx_Freeze`.


    .. py:method:: BaseBuilder._getExecutable()

        Класс :class:`BaseBuilder` является абстрактным. Данный метод является единственным методом, который необходимо определить в производных классах. Метод должен возвращать экземпляр класса :class:`cx_Freeze_.Executable` с информацией о создаваемом запускаемом файле.

    .. py:method:: BaseBuilder._getExtraIncludeFiles()

        Класс :class:`BaseBuilder` знает, какие файлы требуются для запуска OutWiker после сборки независимо от операционной системы. С помощью данного метода можно указать, какие дополнительные файлы, специфические для данной операционной системы, потребуются после сбоки для запуска OutWiker. Метод должен возвращать список кортежей из двух элементов. Первый элемент кортежа - полный путь до файла, который необходимо включить в сборку. Второй элемент кортежа - имя папки, в которую будет скопирован данный файл после сборки. Все файлы, специфичные для операционных систем находятся в папке :file:`need_for_build` в корне папки с исходными кодами. Например, файлы, необходимые для сборки под Windows, находятся в папке :file:`need_for_build/windows`, а под Linux - :file:`need_for_build/linux`.

    .. py:method:: BaseBuilder._getPathIncludes()

       С помощью данного метода можно указать cx_Freeze_, где искать дополнительные бинарные файлы, связанные с библиотеками Python. Данный метод должен возвращать список таких мест. Метод используется только для сборки под Linux, он возвращает список `[u'/usr/lib']`.

    .. py:method:: BaseBuilder._getExtraBuildExeOptions()

        С помощью данного метода можно указать дополнительные параметры для сборки. Метод должен возвращать словарь, в котором ключ является именем параметра, а значение - значением данного параметра. Данные параметры добавляются в словарь параметров (параметр `options` функции `cx_Freeze.setup()`), который передается в качестве значения по ключу `build_exe` (см. `документацию cx_Freeze <http://cx-freeze.readthedocs.io/en/latest/distutils.html>`_). В данный момент данный метод используется в классе :class:`WindowsBuilder`, чтобы добавить параметр `include_msvcr`, обозначающий, что под Windows необходимо включить в сборку динамически загружаемые библиотеки из Microsoft Visual C++ Runtime Library.


.. _cx_Freeze: https://anthony-tuininga.github.io/cx_Freeze/
.. _`src/setup.py`: https://github.com/Jenyay/outwiker/blob/master/src/setup.py
