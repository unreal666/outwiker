---
- name: Build binary assembly for Linux
  hosts: all
  remote_user: "{{remote_user}}"
  vars_files:
      - vars/common.yml
  vars:
      sources_root: "../../../../"
      result_path: "{{ outwiker_dir }}/build/{{ version }}.{{ build }}/linux"
      wxpython_version: "4.0.3"
  environment:
      PATH: "{{ ansible_env.PATH }}:{{homedir}}/.local/bin"
  tasks:
      - name: Remove old sources directory
        file:
            path: "{{ outwiker_dir }}"
            state: "absent"

      - name: Create directories for sources
        file:
            path: "{{ outwiker_dir }}"
            state: "directory"

      - name: Upload sources
        synchronize:
            src: "{{ sources_root }}"
            dest: "{{ outwiker_dir }}"
            rsync_opts:
                - "--exclude=.git"
                - "--exclude=.ropeproject"
                - "--exclude=build"
            use_ssh_args: yes

      - name: Install wxPython
        command: "pipenv run pip install -f {{ wxpython_path }} wxPython=={{ wxpython_version }}"
        args:
            chdir: "{{ outwiker_dir }}"

      - name: Install Python modules
        command: pipenv update --dev
        args:
            chdir: "{{ outwiker_dir }}"

      - name: Build deb binary package
        command: pipenv run fab deb_binary:{{ is_stable }}
        args:
            chdir: "{{ outwiker_dir }}"

      - name: Download deb packages
        fetch:
            src: "{{ result_path }}/outwiker-{{ version }}+{{ build }}{{ deb_suffix }}.deb"
            dest: "{{ save_to }}/"
            flat: true

      - name: Build binary assembly
        command: pipenv run fab linux_binary:{{ is_stable }}
        args:
            chdir: "{{ outwiker_dir }}"

      - name: Rename result archive (7z)
        copy:
            src: "{{ outwiker_dir }}/build/{{ version }}.{{ build }}/linux/outwiker_linux_bin.7z"
            dest: "{{ result_path }}/outwiker_linux{{ suffix }}.7z"
            remote_src: true

      - name: Rename result archive (zip)
        copy:
            src: "{{ outwiker_dir }}/build/{{ version }}.{{ build }}/linux/outwiker_linux_bin.zip"
            dest: "{{ result_path }}/outwiker_linux{{ suffix }}.zip"
            remote_src: true

      - name: Download result archives
        fetch:
            src: "{{ item }}"
            dest: "{{ save_to }}/"
            flat: true
        with_items:
            - "{{ result_path }}/outwiker_linux{{ suffix }}.7z"
            - "{{ result_path }}/outwiker_linux{{ suffix }}.zip"

      - name: Build AppImage
        command: pipenv run fab appimage:{{ is_stable }}
        args:
            chdir: "{{ outwiker_dir }}"

      - name: Download AppImage
        fetch:
            src: "{{ result_path }}/Outwiker-x86_64.AppImage"
            dest: "{{ save_to }}/"
            flat: true
